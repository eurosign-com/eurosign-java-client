/*
 * Eurosign
 * This is the documentation of the eurosign API, you can download all of our SDK in this page.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@eurosign.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Body
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-05-13T10:06:26.547+02:00[Europe/Paris]")
public class Body {
  @SerializedName("name")
  private String name = null;

  @SerializedName("file")
  private String file = null;

  @SerializedName("expirationDate")
  private String expirationDate = null;

  @SerializedName("recipientsOrder")
  private Boolean recipientsOrder = null;

  @SerializedName("recipients")
  private String recipients = null;

  public Body name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the signature request
   * @return name
  **/
  @Schema(description = "The name of the signature request")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Body file(String file) {
    this.file = file;
    return this;
  }

   /**
   * The base64 encoded file
   * @return file
  **/
  @Schema(description = "The base64 encoded file")
  public String getFile() {
    return file;
  }

  public void setFile(String file) {
    this.file = file;
  }

  public Body expirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * The signature request expiration date (format Y-m-d H:i:s)
   * @return expirationDate
  **/
  @Schema(description = "The signature request expiration date (format Y-m-d H:i:s)")
  public String getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
  }

  public Body recipientsOrder(Boolean recipientsOrder) {
    this.recipientsOrder = recipientsOrder;
    return this;
  }

   /**
   * If true, recipients will receive the signature request ordered by their index
   * @return recipientsOrder
  **/
  @Schema(description = "If true, recipients will receive the signature request ordered by their index")
  public Boolean isRecipientsOrder() {
    return recipientsOrder;
  }

  public void setRecipientsOrder(Boolean recipientsOrder) {
    this.recipientsOrder = recipientsOrder;
  }

  public Body recipients(String recipients) {
    this.recipients = recipients;
    return this;
  }

   /**
   * The array containing signature request recipients
   * @return recipients
  **/
  @Schema(description = "The array containing signature request recipients")
  public String getRecipients() {
    return recipients;
  }

  public void setRecipients(String recipients) {
    this.recipients = recipients;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body body = (Body) o;
    return Objects.equals(this.name, body.name) &&
        Objects.equals(this.file, body.file) &&
        Objects.equals(this.expirationDate, body.expirationDate) &&
        Objects.equals(this.recipientsOrder, body.recipientsOrder) &&
        Objects.equals(this.recipients, body.recipients);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, file, expirationDate, recipientsOrder, recipients);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    recipientsOrder: ").append(toIndentedString(recipientsOrder)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
