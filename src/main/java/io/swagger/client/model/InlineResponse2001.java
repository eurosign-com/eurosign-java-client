/*
 * Eurosign
 * This is the documentation of the eurosign API, you can download all of our SDK in this page.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@eurosign.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse2001
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-05-13T10:06:26.547+02:00[Europe/Paris]")
public class InlineResponse2001 {
  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("senderId")
  private List<Object> senderId = null;

  @SerializedName("creationDate")
  private List<Object> creationDate = null;

  @SerializedName("sendDate")
  private List<Object> sendDate = null;

  @SerializedName("expirationDate")
  private List<Object> expirationDate = null;

  @SerializedName("status")
  private List<Object> status = null;

  @SerializedName("recipientsOrder")
  private List<Object> recipientsOrder = null;

  @SerializedName("currentRecipientIndex")
  private List<Object> currentRecipientIndex = null;

  public InlineResponse2001 uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * UUID of the signature request UUID
   * @return uuid
  **/
  @Schema(description = "UUID of the signature request UUID")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public InlineResponse2001 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the signature request
   * @return name
  **/
  @Schema(description = "Name of the signature request")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InlineResponse2001 senderId(List<Object> senderId) {
    this.senderId = senderId;
    return this;
  }

  public InlineResponse2001 addSenderIdItem(Object senderIdItem) {
    if (this.senderId == null) {
      this.senderId = new ArrayList<Object>();
    }
    this.senderId.add(senderIdItem);
    return this;
  }

   /**
   * ID of the sender
   * @return senderId
  **/
  @Schema(description = "ID of the sender")
  public List<Object> getSenderId() {
    return senderId;
  }

  public void setSenderId(List<Object> senderId) {
    this.senderId = senderId;
  }

  public InlineResponse2001 creationDate(List<Object> creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  public InlineResponse2001 addCreationDateItem(Object creationDateItem) {
    if (this.creationDate == null) {
      this.creationDate = new ArrayList<Object>();
    }
    this.creationDate.add(creationDateItem);
    return this;
  }

   /**
   * Creation date of the signature request
   * @return creationDate
  **/
  @Schema(description = "Creation date of the signature request")
  public List<Object> getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(List<Object> creationDate) {
    this.creationDate = creationDate;
  }

  public InlineResponse2001 sendDate(List<Object> sendDate) {
    this.sendDate = sendDate;
    return this;
  }

  public InlineResponse2001 addSendDateItem(Object sendDateItem) {
    if (this.sendDate == null) {
      this.sendDate = new ArrayList<Object>();
    }
    this.sendDate.add(sendDateItem);
    return this;
  }

   /**
   * Sending date of the signature request
   * @return sendDate
  **/
  @Schema(description = "Sending date of the signature request")
  public List<Object> getSendDate() {
    return sendDate;
  }

  public void setSendDate(List<Object> sendDate) {
    this.sendDate = sendDate;
  }

  public InlineResponse2001 expirationDate(List<Object> expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

  public InlineResponse2001 addExpirationDateItem(Object expirationDateItem) {
    if (this.expirationDate == null) {
      this.expirationDate = new ArrayList<Object>();
    }
    this.expirationDate.add(expirationDateItem);
    return this;
  }

   /**
   * Expiration date of the signature request
   * @return expirationDate
  **/
  @Schema(description = "Expiration date of the signature request")
  public List<Object> getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(List<Object> expirationDate) {
    this.expirationDate = expirationDate;
  }

  public InlineResponse2001 status(List<Object> status) {
    this.status = status;
    return this;
  }

  public InlineResponse2001 addStatusItem(Object statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<Object>();
    }
    this.status.add(statusItem);
    return this;
  }

   /**
   * Status date of the signature request
   * @return status
  **/
  @Schema(description = "Status date of the signature request")
  public List<Object> getStatus() {
    return status;
  }

  public void setStatus(List<Object> status) {
    this.status = status;
  }

  public InlineResponse2001 recipientsOrder(List<Object> recipientsOrder) {
    this.recipientsOrder = recipientsOrder;
    return this;
  }

  public InlineResponse2001 addRecipientsOrderItem(Object recipientsOrderItem) {
    if (this.recipientsOrder == null) {
      this.recipientsOrder = new ArrayList<Object>();
    }
    this.recipientsOrder.add(recipientsOrderItem);
    return this;
  }

   /**
   * Order of recipients
   * @return recipientsOrder
  **/
  @Schema(description = "Order of recipients")
  public List<Object> getRecipientsOrder() {
    return recipientsOrder;
  }

  public void setRecipientsOrder(List<Object> recipientsOrder) {
    this.recipientsOrder = recipientsOrder;
  }

  public InlineResponse2001 currentRecipientIndex(List<Object> currentRecipientIndex) {
    this.currentRecipientIndex = currentRecipientIndex;
    return this;
  }

  public InlineResponse2001 addCurrentRecipientIndexItem(Object currentRecipientIndexItem) {
    if (this.currentRecipientIndex == null) {
      this.currentRecipientIndex = new ArrayList<Object>();
    }
    this.currentRecipientIndex.add(currentRecipientIndexItem);
    return this;
  }

   /**
   * Index of the current recipient
   * @return currentRecipientIndex
  **/
  @Schema(description = "Index of the current recipient")
  public List<Object> getCurrentRecipientIndex() {
    return currentRecipientIndex;
  }

  public void setCurrentRecipientIndex(List<Object> currentRecipientIndex) {
    this.currentRecipientIndex = currentRecipientIndex;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001 inlineResponse2001 = (InlineResponse2001) o;
    return Objects.equals(this.uuid, inlineResponse2001.uuid) &&
        Objects.equals(this.name, inlineResponse2001.name) &&
        Objects.equals(this.senderId, inlineResponse2001.senderId) &&
        Objects.equals(this.creationDate, inlineResponse2001.creationDate) &&
        Objects.equals(this.sendDate, inlineResponse2001.sendDate) &&
        Objects.equals(this.expirationDate, inlineResponse2001.expirationDate) &&
        Objects.equals(this.status, inlineResponse2001.status) &&
        Objects.equals(this.recipientsOrder, inlineResponse2001.recipientsOrder) &&
        Objects.equals(this.currentRecipientIndex, inlineResponse2001.currentRecipientIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, name, senderId, creationDate, sendDate, expirationDate, status, recipientsOrder, currentRecipientIndex);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2001 {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    senderId: ").append(toIndentedString(senderId)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    sendDate: ").append(toIndentedString(sendDate)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    recipientsOrder: ").append(toIndentedString(recipientsOrder)).append("\n");
    sb.append("    currentRecipientIndex: ").append(toIndentedString(currentRecipientIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
